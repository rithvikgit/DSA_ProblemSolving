Q1. What is the time, and space complexity of the following code:  

        int a = 0, b = 0;
        for (i = 0; i < N; i++) {
            a = a + rand();
        }
        for (j = 0; j < M; j++) {
            b = b + rand();
        }
Ans. O(N + M) time, O(1) space


Q2. What is the time complexity of the following code: 

        int a = 0;
        for (i = 0; i < N; i++) {
            for (j = N; j > i; j--) {
                a = a + i + j;
            }
        }
Ans. O(N*N)


Q3. What is the time complexity of the following code: 

        int i, j, k = 0;
        for (i = n / 2; i <= n; i++) {
            for (j = 2; j <= n; j = j * 2) {
                k = k + n / 2;
            }
        }
Ans.O(nLogn)


Q4.What does it mean when we say that an algorithm X is asymptotically more efficient than Y? 
Ans. X will always be a better choice for large inputs


Q5.What is the time complexity of the following code: 

        int a = 0, i = N;
        while (i > 0) {
            a += i;
            i /= 2;
        }
Ans. O(N)


Q6. Which of the following best describes the useful criterion for comparing the efficiency of algorithms?
    Time
    Memory
    Both of the above
    None of the above
Ans. Both of the above


Q7. How is time complexity measured?
    By counting the number of algorithms in an algorithm.
    By counting the number of primitive operations performed by the algorithm on a given input size.
    By counting the size of data input to the algorithm.
    None of the above
Ans. By counting the number of primitive operations performed by the algorithm


Q8. What will be the time complexity of the following code?

        for(int i=0;i<n;i++){
        i*=k;
        }
        O(n)
        O(k)
        O(logkn)
        O(lognk)
        
Ans. O(logkn)


Q9.What will be the time complexity of the following code?

        int value = 0;
        for(int i=0;i<n;i++)
            for(int j=0;j<i;j++)
            value += 1;
Ans. n(n-1)


Q10.  Algorithm A and B have a worst-case running time of O(n) and O(logn), respectively. Therefore, algorithm B always runs faster than algorithm A.
    True
    False
Ans.False